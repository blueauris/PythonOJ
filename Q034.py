#!python2
#coding: utf-8

##密码生成
"""
生活在当代社会，我们要记住很多密码，银行卡，qq，人人，微博，邮箱等等。小P经过一番思索之后，发明了下面这种生成密码方法：
给定两个正整数a和b, 利用a / b我们会到的一个长度无限的小数(若a / b不是无限小数，
比如1/2=0.5,我们认为0.5是0.5000000...，同样将其看做无限长的小数），小P将该小数点后第x位到第y位的数字
当做密码，这样，无论密码有多长，小P只要记住a,b,x,y四个数字就可以了，牢记密码再也不是那么困难的事情了。
现在告诉你a,b,x,y（0 < a,b <= 20132013, 0 < x <= y < 100000000000),请你输出密码。
例如：a = 1, b = 2, x = 1, y = 4, 则 a / b = 0.5000000..., 输出小数点后第1到4位数字，即5000
"""

"""
算法一：化为分数
原理：
有理数的小数均可改写为分数形式，小数部分的值与分子分母的值有对应关系。
但使用此方法时，首先需简化分子分母至互质，然后将分母改写为形如9999000的形式，并计算对应的分子，然后按规律由分子推导出小数的非循环和循环节部分。该算法冗余计算较多，不使用


算法二：模拟除法。为找出循环节，记录每位除法后的余数
算法步骤：
1.预处理a、b，求a/b的余数remain。当b值较大时，预计算1*b 2*b 3*b 至9*b,存储备用。当前位置记为0
2.记被除数ori = 10*remain，除数 divi =b，求出一位数的整除商 Quo 和 余数remain，当前位置+1。当b值较大，除法和求余过程可用减法代替。
3.记录商Quo 和 余数remain及相应的位置，并检查remain是否重复
4.若remain不重复，回到步骤2。若产生重复，则已找到循环节。整理出非循环和循环节
5.按x,y生成所需序列
"""

a=23
b=11
x=1
y=15

def genPasswd():
	passwd ='0000'
	return passwd


print genPasswd()